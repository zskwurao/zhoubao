<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zypc.weekly.mapper.ArticleMapper" >
  <resultMap id="BaseResultMap" type="com.zypc.weekly.pojo.Article" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="u_id" property="uId" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" />
    <result column="status" property="status" jdbcType="BIT" />
    <result column="txt" property="txt" jdbcType="LONGVARCHAR" />
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
   <resultMap id="ArticleMap" type="com.zypc.weekly.pojo.Article" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="u_id" property="uId" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" />
    <result column="status" property="status" jdbcType="BIT" />
    <result column="txt" property="txt" jdbcType="LONGVARCHAR" />
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
    <association property="user" select="com.zypc.weekly.mapper.UserMapper.selectById" column="u_id"></association>
  </resultMap>
  
  <select id="getIsSubmit" parameterType="User" resultType="Integer">
  	select count(*) from article where u_id = #{id} and create_date > #{time} and status = 1
  </select>
  
  <insert id="addArticle" parameterType="Article">
  <selectKey keyProperty="id" resultType="int" order="AFTER">
            select last_insert_id()
  </selectKey>
  	 insert into article (id, u_id, create_date, 
      status, txt, content
      )
    values (#{id,jdbcType=INTEGER}, #{uId,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=BIT}, #{txt,jdbcType=LONGVARCHAR}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  
  <select id="getNoActicleList" resultMap="BaseResultMap" parameterType="String">
  	select * from article where u_id = #{uId} and status = 0
  </select>
  
  <select id="getActicleById" resultMap="BaseResultMap" parameterType="Integer">
  	select * from article where id = #{id} and status = 0
  </select>
  
  <select id="getActicle" resultMap="ArticleMap" parameterType="Integer">
  	select * from article where id = #{id}
  </select>
  
  <select id="getArticleList" resultMap="BaseResultMap" parameterType="String">
  	select * from article where u_id = #{uId} and status = 1
  </select>
  
  <delete id="deleteActicle" parameterType="Integer">
  	delete from article where id = #{id}
  </delete>
  
  <update id="updateArticle" parameterType="Article">
  	update article
  	<set>
  		<if test="uId != null">
  			u_id = #{uId},
  		</if>
  		<if test="createDate != null" >
        create_date = #{createDate},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=BIT},
      </if>
      <if test="txt != null" >
        txt = #{txt,jdbcType=LONGVARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
  	</set>
  	where id = #{id}
  </update>
  
  <!-- <update id="updateByExampleSelective" parameterType="map" >
    update article
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.uId != null" >
        u_id = #{record.uId,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=BIT},
      </if>
      <if test="record.txt != null" >
        txt = #{record.txt,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, u_id, create_date, status
  </sql>
  <sql id="Blob_Column_List" >
    txt, content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.zypc.weekly.pojo.ArticleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zypc.weekly.pojo.ArticleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from article
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from article
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zypc.weekly.pojo.ArticleExample" >
    delete from article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zypc.weekly.pojo.ArticleWithBLOBs" >
    insert into article (id, u_id, create_date, 
      status, txt, content
      )
    values (#{id,jdbcType=INTEGER}, #{uId,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=BIT}, #{txt,jdbcType=LONGVARCHAR}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zypc.weekly.pojo.ArticleWithBLOBs" >
    insert into article
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="uId != null" >
        u_id,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="txt != null" >
        txt,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="uId != null" >
        #{uId,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=BIT},
      </if>
      <if test="txt != null" >
        #{txt,jdbcType=LONGVARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zypc.weekly.pojo.ArticleExample" resultType="java.lang.Integer" >
    select count(*) from article
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update article
    set id = #{record.id,jdbcType=INTEGER},
      u_id = #{record.uId,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=BIT},
      txt = #{record.txt,jdbcType=LONGVARCHAR},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update article
    set id = #{record.id,jdbcType=INTEGER},
      u_id = #{record.uId,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zypc.weekly.pojo.ArticleWithBLOBs" >
    update article
    <set >
      <if test="uId != null" >
        u_id = #{uId,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=BIT},
      </if>
      <if test="txt != null" >
        txt = #{txt,jdbcType=LONGVARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zypc.weekly.pojo.ArticleWithBLOBs" >
    update article
    set u_id = #{uId,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=BIT},
      txt = #{txt,jdbcType=LONGVARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zypc.weekly.pojo.Article" >
    update article
    set u_id = #{uId,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update> -->
</mapper>